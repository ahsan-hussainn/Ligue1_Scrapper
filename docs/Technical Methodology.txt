# Technical Methodology

## Web Scraping Approach

### Target Website
- **Source**: [Soccerway - Ligue 1 2024-25](https://ca.soccerway.com/national/france/ligue-1/20242025/regular-season/r81802/matches/)
- **Dynamic Content**: JavaScript-loaded match data requiring Selenium

### Two-Phase Optimization Strategy

#### Phase 1: Navigation
```python
def navigate_to_first_gameweek(driver, max_clicks=40):
    # Click "Load previous" buttons until reaching season start
    # Optimized for speed without data extraction
```

**Benefits:**
- Faster navigation (no DOM parsing)
- Reduced memory usage
- Cleaner separation of concerns

#### Phase 2: Data Extraction
```python
def extract_all_data_from_current_page(driver):
    # Single-pass extraction of all loaded data
    # Efficient processing with built-in validation
```

## Data Processing Pipeline

### 1. Container Validation
```python
# Skip non-match containers
if not container.find_elements(By.CSS_SELECTOR, "a.sc-22ef6ec-0"):
    continue
```

### 2. Goal Filtering
```python
# Only process low-scoring matches (≤3 goals)
if home_score + away_score <= 3:
    # Process match data
```

### 3. First Goal Extraction
```python
# Handle regular time and extra time
if '+' in first_goal:
    parts = first_goal.split('+')
    return int(parts[0]) + int(parts[1])  # "90+3" → 93
```

## CSS Selectors Used

| Element | Selector | Purpose |
|---------|----------|---------|
| Match Links | `a.sc-22ef6ec-0` | Navigate to match details |
| Team Names | `span.label.sc-8bec8ea9-3.RA-dqA` | Extract team names |
| Scores | `span.label.score` | Extract match scores |
| Goal Times | `span.label.info-inverted` | Extract goal minutes |
| Load Button | `//*[contains(text(), 'Load previous')]` | Navigation control |

## Error Handling Strategy

### Graceful Degradation
- Skip problematic containers instead of failing
- Continue processing if individual matches fail
- Validate data completeness at the end

### Session Management
```python
try:
    # Scraping operations
except (SessionNotCreatedException, InvalidSessionIdException):
    # Handle browser session issues
    break
```

## Performance Optimizations

1. **Headless Browser**: Reduced overhead
2. **Strategic Waits**: Balance between speed and reliability
3. **Efficient Filtering**: Apply business logic during extraction
4. **Memory Management**: Process data in single pass

## Validation Framework

### Completeness Checks
- Expected match count (38 gameweeks × 10 matches = 380)
- Team coverage (all 20 Ligue 1 teams)
- Date range validation
- Duplicate detection

### Data Quality Metrics
- Missing score validation
- First goal timing accuracy
- Link integrity verification